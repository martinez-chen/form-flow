{
  "info": {
    "name": "Form Flow API",
    "description": "Form Flow 工單管理系統 API 集合\n\n## 使用說明\n1. 設定環境變數 `baseUrl` 為 API 基礎網址\n2. 設定環境變數 `username` 和 `password` 用於 Basic Auth\n3. 所有請求都需要認證\n\n## 環境變數\n- `baseUrl`: API 基礎網址 (例如: http://localhost:8080)\n- `username`: 認證用戶名\n- `password`: 認證密碼",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "1234567890"
  },
  "item": [
    {
      "name": "工單管理",
      "item": [
        {
          "name": "創建工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has order ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData.id).to.be.a('number');",
                  "    ",
                  "    // 儲存訂單 ID 供後續測試使用",
                  "    pm.environment.set('orderId', jsonData.id);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.eql('Order created successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"修復登入問題\",\n  \"description\": \"用戶反映無法正常登入系統，需要檢查認證流程\",\n  \"category\": \"BUG\",\n  \"priority\": \"HIGH\",\n  \"creatorId\": 1,\n  \"dueDate\": \"2024-01-15T10:00:00\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "創建新的工單。支援指派給群組或團隊。"
          },
          "response": [
            {
              "name": "成功創建工單",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"修復登入問題\",\n  \"description\": \"用戶反映無法正常登入系統\",\n  \"category\": \"BUG\",\n  \"priority\": \"HIGH\",\n  \"creatorId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders"
                  ]
                }
              },
              "status": "Created",
              "code": 201,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": 1,\n  \"message\": \"Order created successfully\"\n}"
            },
            {
              "name": "驗證錯誤",
              "originalRequest": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"\",\n  \"category\": \"BUG\",\n  \"priority\": \"HIGH\",\n  \"creatorId\": 1\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders"
                  ]
                }
              },
              "status": "Bad Request",
              "code": 400,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Validation failed\",\n  \"message\": \"Title cannot be blank\",\n  \"fields\": [\n    {\n      \"field\": \"title\",\n      \"message\": \"Title cannot be blank\"\n    }\n  ]\n}"
            }
          ]
        },
        {
          "name": "創建包含群組的工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has order ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.environment.set('groupOrderId', jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"開發新功能\",\n  \"description\": \"實作用戶個人資料管理功能\",\n  \"category\": \"FEATURE\",\n  \"priority\": \"MEDIUM\",\n  \"creatorId\": 2,\n  \"groupId\": 100,\n  \"teamId\": 200,\n  \"dueDate\": \"2024-02-01T17:00:00\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "創建指派給特定群組和團隊的工單"
          },
          "response": []
        },
        {
          "name": "獲取所有工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"Each order has required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    if (jsonData.length > 0) {",
                  "        var order = jsonData[0];",
                  "        pm.expect(order).to.have.property('id');",
                  "        pm.expect(order).to.have.property('title');",
                  "        pm.expect(order).to.have.property('status');",
                  "        pm.expect(order).to.have.property('createdAt');",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders"
              ]
            },
            "description": "獲取系統中所有工單的列表"
          },
          "response": [
            {
              "name": "成功獲取工單列表",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "[\n  {\n    \"id\": 1,\n    \"title\": \"修復登入問題\",\n    \"description\": \"用戶反映無法正常登入系統\",\n    \"category\": \"BUG\",\n    \"priority\": \"HIGH\",\n    \"status\": \"PENDING\",\n    \"creatorId\": 1,\n    \"assigneeId\": null,\n    \"groupId\": null,\n    \"teamId\": null,\n    \"dueDate\": \"2024-01-15T10:00:00\",\n    \"createdAt\": \"2024-01-01T09:00:00\",\n    \"updatedAt\": \"2024-01-01T09:00:00\",\n    \"completedAt\": null\n  }\n]"
            }
          ]
        },
        {
          "name": "獲取單一工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Order has all required fields\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('id');",
                  "    pm.expect(jsonData).to.have.property('title');",
                  "    pm.expect(jsonData).to.have.property('status');",
                  "    pm.expect(jsonData).to.have.property('createdAt');",
                  "    pm.expect(jsonData).to.have.property('updatedAt');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/{{orderId}}",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "{{orderId}}"
              ]
            },
            "description": "根據工單ID獲取工單詳細信息"
          },
          "response": [
            {
              "name": "成功獲取工單",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders/1",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders",
                    "1"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"id\": 1,\n  \"title\": \"修復登入問題\",\n  \"description\": \"用戶反映無法正常登入系統\",\n  \"category\": \"BUG\",\n  \"priority\": \"HIGH\",\n  \"status\": \"PENDING\",\n  \"creatorId\": 1,\n  \"assigneeId\": null,\n  \"groupId\": null,\n  \"teamId\": null,\n  \"dueDate\": \"2024-01-15T10:00:00\",\n  \"createdAt\": \"2024-01-01T09:00:00\",\n  \"updatedAt\": \"2024-01-01T09:00:00\",\n  \"completedAt\": null\n}"
            },
            {
              "name": "工單不存在",
              "originalRequest": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders/999",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders",
                    "999"
                  ]
                }
              },
              "status": "Not Found",
              "code": 404,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Order not found: 999\",\n  \"timestamp\": \"2024-01-01T10:00:00Z\"\n}"
            }
          ]
        },
        {
          "name": "指派工單給群組",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has success message\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('message');",
                  "    pm.expect(jsonData.message).to.eql('Order assigned to group successfully');",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"groupId\": 100,\n  \"requesterId\": 50\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/{{orderId}}/assign-to-group",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "{{orderId}}",
                "assign-to-group"
              ]
            },
            "description": "將工單指派給指定的群組"
          },
          "response": [
            {
              "name": "成功指派",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"groupId\": 100,\n  \"requesterId\": 50\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders/1/assign-to-group",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders",
                    "1",
                    "assign-to-group"
                  ]
                }
              },
              "status": "OK",
              "code": 200,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"message\": \"Order assigned to group successfully\"\n}"
            },
            {
              "name": "工單狀態衝突",
              "originalRequest": {
                "method": "PUT",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"groupId\": 100,\n  \"requesterId\": 50\n}",
                  "options": {
                    "raw": {
                      "language": "json"
                    }
                  }
                },
                "url": {
                  "raw": "{{baseUrl}}/api/v1/orders/1/assign-to-group",
                  "host": [
                    "{{baseUrl}}"
                  ],
                  "path": [
                    "api",
                    "v1",
                    "orders",
                    "1",
                    "assign-to-group"
                  ]
                }
              },
              "status": "Conflict",
              "code": 409,
              "_postman_previewlanguage": "json",
              "header": [
                {
                  "key": "Content-Type",
                  "value": "application/json"
                }
              ],
              "cookie": [],
              "body": "{\n  \"error\": \"Cannot assign completed order to group\"\n}"
            }
          ]
        },
        {
          "name": "獲取我創建的工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"All orders have correct creator ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    jsonData.forEach(function(order) {",
                  "        pm.expect(order.creatorId).to.eql(1);",
                  "    });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/my-orders?creatorId=1",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "my-orders"
              ],
              "query": [
                {
                  "key": "creatorId",
                  "value": "1"
                }
              ]
            },
            "description": "根據創建者ID獲取該用戶創建的所有工單"
          },
          "response": []
        },
        {
          "name": "獲取指派給我的工單",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response is an array\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.be.an('array');",
                  "});",
                  "",
                  "pm.test(\"All orders have correct assignee ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    jsonData.forEach(function(order) {",
                  "        pm.expect(order.assigneeId).to.eql(2);",
                  "    });",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/v1/orders/my-assignments?assigneeId=2",
              "host": [
                "{{baseUrl}}"
              ],
              "path": [
                "api",
                "v1",
                "orders",
                "my-assignments"
              ],
              "query": [
                {
                  "key": "assigneeId",
                  "value": "2"
                }
              ]
            },
            "description": "根據被指派者ID獲取指派給該用戶的所有工單"
          },
          "response": []
        }
      ]
    }
  ],
  "auth": {
    "type": "basic",
    "basic": [
      {
        "key": "username",
        "value": "{{username}}",
        "type": "string"
      },
      {
        "key": "password",
        "value": "{{password}}",
        "type": "string"
      }
    ]
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 在每個請求前檢查必要的環境變數",
          "if (!pm.environment.get('baseUrl')) {",
          "    console.log('警告: baseUrl 環境變數未設定');",
          "}",
          "",
          "if (!pm.environment.get('username') || !pm.environment.get('password')) {",
          "    console.log('警告: username 或 password 環境變數未設定');",
          "}"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// 全域測試腳本",
          "pm.test(\"Response time is less than 5000ms\", function () {",
          "    pm.expect(pm.response.responseTime).to.be.below(5000);",
          "});",
          "",
          "pm.test(\"Content-Type is application/json\", function () {",
          "    if (pm.response.code === 200 || pm.response.code === 201) {",
          "        pm.expect(pm.response.headers.get('Content-Type')).to.include('application/json');",
          "    }",
          "});"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080",
      "type": "string"
    }
  ]
}